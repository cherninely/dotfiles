local present, cmp = pcall(require, 'cmp')

if not present then
  return
end

local present, lspkind = pcall(require, 'lspkind')

if not present then
  return
end

cmp.setup{
     experimental = {
        ghost_text = true
    },

    window = {
        completion = cmp.config.window.bordered(),
        documentation = cmp.config.window.bordered(),
    },

    snippet = {

        -- REQUIRED - you must specify a snippet engine
        expand = function(args)
            require'luasnip'.lsp_expand(args.body) -- Luasnip expand
        end,
    },

    -- –ö–ª–∞–≤–∏—à–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –≤ nvim-cmp
    mapping = {

        -- –í—ã–∑–æ–≤ –º–µ–Ω—é –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è
        ['<C-;>'] = cmp.mapping(cmp.mapping.complete(), { 'i', 'c' }),
        ['<CR>'] = cmp.config.disable,                      -- –Ø –Ω–µ –ª—é–±–ª—é, –∫–æ–≥–¥–∞ –≤–µ—â–∏ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω—è—é—Ç—Å—è –Ω–∞ <Enter>
        ['<Tab>'] = cmp.mapping.confirm({ select = true }), -- –ê –≤–æ—Ç –Ω–∞ <C-y> –≤–ø–æ–ª–Ω–µ –æ–∫

        -- –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–µ—Ä–≤–∞—Ç—å –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
        ['<C-s>'] = cmp.mapping({
            i = cmp.mapping.abort(), -- –ü—Ä–µ—Ä—ã–≤–∞–µ–º –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
            c = cmp.mapping.close(), -- –ó–∞–∫—Ä—ã–≤–∞–µ–º –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
        }),
        ['<C-j>'] = cmp.mapping(cmp.mapping.select_next_item(), { 'i', 'c' }),
        ['<C-k>'] = cmp.mapping(cmp.mapping.select_prev_item(), { 'i', 'c' }),
    },

    sources = cmp.config.sources({
        { name = 'nvim_lsp' },                -- LSP üëÑ
        { name = 'nvim_lsp_signature_help' }, -- –ü–æ–º–æ—â—å –ø—Ä–∏ –≤–≤–µ–¥–µ–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ –º–µ—Ç–æ–¥–∞—Ö üöÅ
        { name = 'luasnip' },                 -- Luasnip üêå
        { name = 'buffer' },                  -- –ë—É—Ñ—Ñ–µ—Ä—ã üêÉ
        { name = 'path' },                    -- –ü—É—Ç–∏ ü™§
        { name = "emoji" },                   -- –≠–º–æ–¥–∑–∏ üò≥
    }),
    formatting = {
        format = lspkind.cmp_format({
            maxwidth = 50,   -- prevent the popup from showing more than provided characters (e.g 50 will not show more than 50 characters)
        })
    }
}
