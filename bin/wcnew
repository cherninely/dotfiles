#!/usr/bin/env bash

if [[ $# < 2 ]]; then
    echo 'Usage:'
    echo '. wcnew wc1 images3'
    echo '. wcnew wc1 images3+video3+web3'
    echo '. wcnew wc1 images_touch_phone -m # развернуть и собрать'
    echo 'wcnew wc1 images_touch_phone -mt # развернуть, собрать и запустить tmux-сессию с именем рабочей копии'
    echo ''
    echo 'Такая конструкция («. wcnew») приводит к запуску не в дочернем, а в текущем шелле,'
    echo 'что обеспечивает сохранение выбранной в скрипте директории.'
    exit
fi

#
# filter, rearrange and read opts
eval set -- "`getopt -o "m,t,b:" --long "make,tmux,branch" -- "$@"`"
while [[ $1 != --  ]]; do case $1 in
    -m|--make) IS_MAKE=1;;
    -t|--tmux) IS_TMUX=1;;
#   -b|--branch) CLONE_BRANCH=$2; shift 1;;
    *) echo "Unknown param"
esac; shift 1; done

shift 1; # remove divider (--)

WC_NAME=$1
PROJECTS=$2
YXWEB_PATH=report/templates/YxWeb

mkdir -p ~/$WC_NAME/$YXWEB_PATH

function open_or_print {
    [[ $(uname) = Darwin && $(which open) ]] && open $1 || echo $1
}

for PROJECT in ${PROJECTS//+/ }; do
    if [[ $PROJECT =~ video || $PROJECT =~ images || $PROJECT == sansara ]]; then
        ORG=mm-interfaces
        ORG_ALIAS=mm
        REPO=${PROJECT}
    else
        ORG=serp
        ORG_ALIAS=serp
        REPO=${PROJECT//_/-}
    fi

    cd ~/$WC_NAME
    ln -s $YXWEB_PATH/$PROJECT $PROJECT
    cd $YXWEB_PATH
    git clone git@github.yandex-team.ru:$ORG/$REPO $PROJECT

    [ $? == 0 ] || exit 1

    # Создаём симлинк video -> video2 (костыль для статики video2)
    if [[ $PROJECT == video2 ]]; then
        ln -s video2 video
    fi

    # Создаём симлинки web4 -> web3, web_touch_phone (костыль для статики ?)
    if [[ $PROJECT == web4 ]]; then
        ln -s web4 web3 && \
        ln -s web4 web_touch_phone && \
        echo 'Симлинки созданы';
    fi

    if [[ $IS_MAKE == 1 ]]; then
        echo "Проект: $PROJECT";
        cd ~/$WC_NAME/$PROJECT
        if [[ $PROJECT == web4 ]]; then
            make build # Чтобы не выполнять долгие тесты
        elif [[ $PROJECT == sansara ]]; then
            make install # просто make запускает сервер и браузер
        else
            make
        fi

        echo -e "\033[32m"
        echo Дальнейшие действия:
        echo "cd ~/$WC_NAME/$PROJECT"

    else

        echo -e "\033[32m"
        echo Дальнейшие действия:
        echo "cd ~/$WC_NAME/$PROJECT && make"

    fi

    cd ~/$WC_NAME/$PROJECT # go back again

    if [[ $ORG == "mm-interfaces" ]]; then
        
        if [[ $PROJECTS =~ sansara ]]; then
            if [[ $PROJECT == sansara ]]; then
                make start
                sleep 1
                open_or_print "http://sansara.ru:8888/images/search?text=Lamborghini"
            fi
        else
            open_or_print "$(wcurl)"
        fi
    fi

    echo -e "\033[0m"

done

# Создаем tmux-сессию для последнего проекта из цикла
if [[ $IS_TMUX == 1 ]]; then
    cd ~/$WC_NAME/$PROJECT
    tmux -2 -S /tmp/tm-`whoami` new-session -s $WC_NAME "tmux source-file ~/dotfiles/.tmux-default-session-$ORG_ALIAS"
fi
