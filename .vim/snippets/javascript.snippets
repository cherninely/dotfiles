snippet d
	debugger
snippet f
	function(${1}) {
		${3}
	}${2}
snippet fun
	function ${1}(${2}) {
		${3}
	};
snippet m
	${1}: function(${2}) {
		${3}
	},
snippet clos
	(function() {
		${1}
	})();
snippet r
	return${1}
snippet re
	require('${1}')${2}
snippet pr
	prototype
snippet for
	for (var ${1:i}${2: = 0}, ${3:l}${4: = 10}; $1 < $3; $1++) {
		${5}
	};
snippet fori
	for (${1:var i} in ${2}) {
		${3}
	};
snippet i
	if (${1})
		${2}
snippet if
	if (${1}) {
		${2}
	}
snippet ife
	if (${1}) {
		${2}
	} else {
	}
snippet switch
	switch (${1}) {
		case ${2}:
			${3}
			break;
	};
snippet cl
	console.log(${1});${2}
snippet cw
	console.warning(${1});${2}
snippet ce
	console.error(${1});${2}
snippet ct
	console.time('${1}');${2}
snippet cte
	console.timeEnd('${1}');${2}
snippet clv
	console.log('${1:var}: ' + $1);${2}
snippet cln
	console.log("\n\n\n\033[31m");
	console.log(${1});
	console.log("\033[0m\n\n\n");
snippet dmp
	console.log("\n\n\n\033[31m");
	console.log(JSON.stringify(${1}, null, '  '))
	console.log("\033[0m\n\n\n");
snippet clj
	console.log(JSON.stringify(${1}));${2}
snippet pd
	e.preventDefault();${1}
snippet proto
	${1:class_name}.prototype.${2:method_name} = function(${3:first_argument}) {
		${4}
	};
snippet t
	I18n.t('${1:type.key}', { defaultValue: '${2}' })${3}
snippet sett
	setTimeout(function() {
		${2}
	}, ${1:0});
snippet seti
	setInterval(function() {
		${2}
	}, ${1:0});
snippet wh
	while (${1}) {
		${2}
	};
snippet gebi
	document.getElementById('${1}')${2}
snippet gebc
	document.getElementsByClassName('${1}')${2:[0]}
snippet gebt
	document.getElementsByTagName('${1}')${2:[0]}
snippet gebn
	document.getElementsByName('${1}')${2:[0]}
snippet try
	try {
		${1}
	} catch (e) {
		// error
	}

snippet get
	get('${1}')${2}
snippet has
	hasOwnProperty(${1})
snippet set
	set({ '${1}': '${2}' })${3}
snippet ext
	_.extend(${1}, ${2})
snippet keys
	Object.keys(${1})${2}
snippet each
	forEach(function(${1:v}) {
		${2}
	})
snippet map
	map(function(${1:v}) {
		return ${2};
	})
snippet euc
	encodeURIComponent(${1})${2}
snippet timer
	var date = new Date
	${1}
	new Date - date
snippet js
	JSON.stringify(${1}, null, '  ')
snippet /**
	/**
	 * ${1:description}
	 *
	 */
snippet @par
	@param {${1:type}} ${2:name} ${3:description}
snippet @ret
	@return {${1:type}} ${2:description}
snippet blocks
	blocks['${1}']${2}
snippet block
	block: '${1}',${2}
snippet elem
	elem: '${1}',${2}
snippet mod
	mod: { ${1}: '${2}' },${3}
snippet exp
	data.experiments['${1}']${2}
snippet expr
	data.rdat.cgi().p('test-id') == ${1}
snippet fbi
	findBlockInside${1}
snippet decl
	BEM.DOM.decl(${1}, {

		onSetMod: {
			js: function() {
				${2}
			}
		}

	}, {

	});
snippet logger
	logger = $('<ul>').css({
		'position': 'absolute',
		'top': 0,
		'right': 0,
		'z-index': 9999,
		'background-color': '#fff'
	}).appendTo($('body'))
	function log(s) {
		logger.append('<li>' + s + '</li>')
	};
snippet pcss
	data.pushCSSJS({ name: '${1:wiz}', elem: 'css', url: data.config.staticHost + 'bundles/$1/$1.less.css' });${2}
snippet pjs
	data.pushCSSJS({ name: '${1:wiz}', elem: 'js', url: data.config.staticHost + 'bundles/$1/_$1.js' });${2}
